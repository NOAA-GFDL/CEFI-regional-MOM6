on:
  schedule:
    - cron: '0 12 * * 3'  # Every Wednesday at 12:00 UTC
  push:
    branches:
      - auto-update  # Trigger on push to this feature branch for testing
  workflow_dispatch:

jobs:
  update-submodules:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0  # fetch full history for branch checks

      - name: Set up git user
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Set branch name
        id: set-branch-name
        run: echo "branch_name=auto/update-submodules-$(date +%Y%m%d)" >> $GITHUB_OUTPUT

      - name: Check and update submodules
        id: update
        run: |
          set -e
          updated=0
          updated_submodules=""
          branch_name="${{ steps.set-branch-name.outputs.branch_name }}"

          # Check if branch exists
          if git ls-remote --exit-code --heads origin $branch_name; then
            echo "Branch $branch_name exists. Checking it out."
            git fetch origin $branch_name
            git checkout $branch_name
          else
            echo "Creating new branch $branch_name"
            git checkout -b $branch_name
          fi

          for submodule in src/MOM6 src/ocean_BGC; do
            echo "Checking submodule: $submodule"
            cd $submodule

            git fetch origin dev/cefi
            current_hash=$(git rev-parse HEAD)
            latest_hash=$(git rev-parse origin/dev/cefi)

            if [ "$current_hash" != "$latest_hash" ]; then
              echo "Updating $submodule from $current_hash to $latest_hash"
              git checkout origin/dev/cefi
              cd -
              git add $submodule
              updated=1
              updated_submodules="$updated_submodules\n- $submodule"
            else
              echo "$submodule is already up to date."
              cd -
            fi
          done

          echo "updated=$updated" >> $GITHUB_OUTPUT
          # Trim leading newlines and empty lines
          updated_submodules_trimmed=$(echo -e "$updated_submodules" | sed '/^\s*$/d')
          echo "updated_submodules=$updated_submodules_trimmed" >> $GITHUB_OUTPUT

      - name: Create Pull Request
        if: steps.update.outputs.updated == '1'
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: Auto-update submodules to latest dev/cefi
          title: Auto-update submodules to latest dev/cefi
          body: |
            This PR updates the following submodules to the latest commit on `dev/cefi`:
            ${{ steps.update.outputs.updated_submodules }}

            Auto-generated by GitHub Actions.
          branch: ${{ steps.set-branch-name.outputs.branch_name }}
