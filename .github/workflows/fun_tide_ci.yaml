name: fun-tide-ci

on:
  push:
    branches: [ "tide_ci" ]

#
env:
  TEST_DIR: ${{ github.workspace }}/${{ github.run_id }}
  PR_NUMBER: ${{ github.event.number }}
  img: /gpfs/f5/cefi/world-shared/container/cefi_mom6_intel_2024.2.1.sif

#
jobs:
  checkout-build:
    runs-on: [self-hosted, gaea-c5] 
    timeout-minutes: 360

    steps:
    - name: Checkout CEFI-regional-MOM6
      uses: actions/checkout@v4
      with:
        path: ${{ github.run_id }}/MOM6_TIDE
        fetch-depth: 0   # Fetch full history to prevent detached HEAD issues
        ref: ${{ github.event.pull_request.head.ref || github.ref_name }}
        repository: ${{ github.event.pull_request.head.repo.full_name || github.repository }}
        submodules: recursive

    - name: Build MOM6SIS2 using container
      run: |
        cd ${{ env.TEST_DIR }}/MOM6_TIDE/builds
        pwd
        echo "SIF image path: $img"
        #apptainer exec -B /gpfs -B /ncrc/home2/Yi-cheng.Teng:/ncrc/home2/Yi-cheng.Teng $img bash linux-build.bash -m docker -p linux-intel -t repro -f mom6solo        
        jobid=$(sbatch --parsable ci_build_driver.sh | awk -F';' '{print $1}' | cut -f1)
        #
        sleep 1
        while :; do
            job_status=$(squeue -h -j "$jobid" -o "%T" 2>/dev/null)
            if [ -z "$job_status" ]; then
               echo "Job with ID $jobid is not found or completed."
               break
            else
               echo "Job with ID $jobid is still running."
               echo "Job Status: $job_status"
            fi
            sleep 60  # Adjust the sleep duration as needed
        done

        check_file="${{ env.TEST_DIR }}/MOM6_TIDE/builds/build/docker-linux-intel/ocean_only/repro/MOM6"
        if [ -f "$check_file" ]; then
            echo "PASSED: $check_file"
        else
            echo "FAILED: $check_file"
            exit 1
        fi

    - name: Clean-up workspace
      run: |
        echo "Cleaning up ${{ env.TEST_DIR }}"
        rm -rf ${{ env.TEST_DIR }}        
