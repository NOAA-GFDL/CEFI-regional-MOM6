name: CEFI-MOM6-ci

on:
  # Triggers this workflow on pull request event with "CEFI_MOM6_RT_container" label
  pull_request:
    branches: [ "test" ]
    types: [ labeled ]

#
env:
  TEST_DIR: ${{ github.workspace }}/${{ github.run_id }}
  PR_NUMBER: ${{ github.event.number }}

#
jobs:
  checkout-build:
    if: ${{ github.event.label.name == 'CEFI_MOM6_RT_container' }}
    runs-on: [self-hosted]
    timeout-minutes: 600
    strategy:
      max-parallel: 1    

    steps:
    - name: Checkout CEFI-regional-MOM6
      uses: actions/checkout@v4
      with:
        path: ${{ github.run_id }}/CEFI_MOM6_CHECK
        fetch-depth: 0   # Fetch full history to prevent detached HEAD issues
        ref: ${{ github.event.pull_request.head.ref || github.ref_name }}
        repository: ${{ github.event.pull_request.head.repo.full_name || github.repository }}
        submodules: recursive

    - name: Build MOM6SIS2 using container
      run: |
        cd ${{ env.TEST_DIR }}/CEFI_MOM6_CHECK/builds
        #pwd
        #img=/gpfs/f6/ira-cefi/world-shared/container/ubuntu22.04-intel-ufs-env-v1.8.0-llvm.img
        #apptainer exec -B /gpfs -B /ncrc/home2/Yi-cheng.Teng:/ncrc/home2/Yi-cheng.Teng $img bash linux-build.bash -m docker -p linux-intel -t repro -f mom6sis2
        jobid=$(sbatch --parsable ci_build_driver.sh | awk -F';' '{print $1}' | cut -f1)
        #
#        sleep 1
#        while :; do
#            job_status=$(squeue -h -j "$jobid" -o "%T" 2>/dev/null)
#            if [ -z "$job_status" ]; then
#               echo "Job with ID $jobid is not found or completed."
#               break
#            else
#               echo "Job with ID $jobid is still running."
#               echo "Job Status: $job_status"
#            fi
#            sleep 60  # Adjust the sleep duration as needed
#        done
#        
#        check_file="${{ env.TEST_DIR }}/CEFI_MOM6_CHECK/builds/build/docker-linux-intel/ocean_ice/repro/MOM6SIS2"
#        if [ -f "$check_file" ]; then
#            echo "PASSED: $check_file"
#        else
#            echo "FAILED: $check_file"
#            exit 1
#        fi 


  run-CEFI_MOM6-ci:
    needs: checkout-build
    runs-on: [self-hosted]
    strategy:
      max-parallel: 1
      matrix:
        case: ["NWA12.COBALT"]#, "NEP10.COBALT"]
    steps:

      - name: Run Experiment ${{ matrix.case }}
        run: |
          #chmod +x ${{ env.TEST_DIR }}/CEFI_MOM6_CHECK/builds/build/docker-linux-intel/ocean_ice/repro/MOM6SIS2
          # Clone into a temporary directory
          TEMP_GIT_DIR="${{ env.TEST_DIR }}/CEFI_MOM6_CHECK/TEMP_GIT"
          git clone --branch ${{ github.event.pull_request.head.ref }} \
          https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.event.pull_request.head.repo.full_name }}.git \
          $TEMP_GIT_DIR
          # Copy the .git folder to restore Git metadata
          rsync -av $TEMP_GIT_DIR/.git/ ${{ env.TEST_DIR }}/CEFI_MOM6_CHECK/.git/
                    
          # Clean up the temporary directory
          rm -rf $TEMP_GIT_DIR 

          #
          cd ${{ env.TEST_DIR }}/CEFI_MOM6_CHECK/exps/${{ matrix.case }}

          #
          git config --global --add safe.directory ${{ env.TEST_DIR }}/CEFI_MOM6_CHECK

          # Configure GitHub Actions bot credentials
          git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.event.pull_request.head.repo.full_name }}.git
          git config --global user.name "${{ secrets.GHA_USERNAME }}"
          git config --global user.email "${{ secrets.GHA_EMAIL }}"

          # Ensure you are on the PR branch
          git fetch origin
          git checkout ${{ github.event.pull_request.head.ref }}
          git pull origin ${{ github.event.pull_request.head.ref }}

          # Add and commit parameter doc changes
          git add MOM_parameter_doc.* SIS_parameter_doc.* COBALT_parameter_doc.*

          if git diff --cached --quiet; then
            echo "No parameter doc changes detected for ${{ matrix.case }}."
          else
            git commit -m "Update parameter documentation files for ${{ matrix.case }}"
            git push "https://${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.event.pull_request.head.repo.full_name }}" HEAD:${{ github.event.pull_request.head.ref }}
          fi

#          jobid=$(sbatch --parsable driver.sh | awk -F';' '{print $1}' | cut -f1) 
#          #
#          sleep 1
#          while :; do
#              job_status=$(squeue -h -j "$jobid" -o "%T" 2>/dev/null)
#              if [ -z "$job_status" ]; then
#                 echo "Job with ID $jobid is not found or completed."
#                 break
#              else
#                 echo "Job with ID $jobid is still running."
#                 echo "Job Status: $job_status"
#              fi
#              sleep 60  # Adjust the sleep duration as needed
#          done
#          # 
#          expected_string="All restart files are identical, PASS"
#          check_file="${{ env.TEST_DIR }}/CEFI_MOM6_CHECK/exps/${{ matrix.case }}/${{ matrix.case }}_o.$jobid"
#          if [ -f "$check_file" ]; then
#             if grep -qF "$expected_string" $check_file; then
#                 echo "PASSED: ${{ matrix.case }}"
#             else
#                 echo "FAILED: ${{ matrix.case }}"
#                 exit 1
#             fi
#          else
#             echo "Can not find $check_file. STOP"
#             exit 10
#          fi
          
      - name: Clean-up workspace for ${{ matrix.case }}
        run: |
          echo "Cleaning up ${{ env.TEST_DIR }}"
          rm -rf ${{ env.TEST_DIR }}
          # Check if the tar.gz file exists and delete it if found
          if [ -f "${{ github.workspace }}/CEFI_MOM6_CHECK.tar.gz" ]; then
              echo "Found CEFI_MOM6_CHECK.tar.gz, deleting it."
              rm "${{ github.workspace }}/CEFI_MOM6_CHECK.tar.gz"
          else
              echo "CEFI_MOM6_CHECK.tar.gz not found, skipping deletion."
          fi

  add-pass-label:
    needs: run-CEFI_MOM6-ci
    runs-on: [self-hosted]
    if: ${{ needs.run-CEFI_MOM6-ci.result == 'success' }}
    steps:

      - name: Check Token Permissions
        run: |
          echo "Checking token permissions..."
          curl -s -H "Authorization: Bearer ${{ secrets.PAT_TOKEN }}" \
          https://api.github.com/repos/${{ github.repository }}/issues/${{ github.event.pull_request.number }}

      - name: Check Bot Token Permissions
        run: |
          echo "Checking bot token permissions..."
          curl -s -H "Authorization: Bearer ${{ secrets.BOT_PAT }}" \
          https://api.github.com/repos/${{ github.repository }}/issues/${{ github.event.pull_request.number }}

      - name: Check Github Token Permissions
        run: |
          echo "Checking token permissions..."
          curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
          https://api.github.com/repos/${{ github.repository }}/issues/${{ github.event.pull_request.number }}


      - name: Add "pass_CEFI_MOM6_RT_container" label on success
        run: |
          TOKEN=${{ secrets.GITHUB_TOKEN }}
          RT_TEST_LABEL="CEFI_MOM6_RT_container"
          PASS_LABEL="pass_CEFI_MOM6_RT_container"
          # Remove the "CEFI_MOM6_RT_container" label
#          curl -X DELETE \
#            -H "Authorization: Bearer $TOKEN" \
#            -H "Accept: application/vnd.github.v3+json" \
#            "https://api.github.com/repos/$GITHUB_REPOSITORY/issues/${{ env.PR_NUMBER }}/labels/$RT_TEST_LABEL"
#          # Add the "pass_CEFI_MOM6_RT_container" label
#          curl -X POST \
#            -H "Authorization: Bearer $TOKEN" \
#            -H "Accept: application/vnd.github.v3+json" \
#            "https://api.github.com/repos/$GITHUB_REPOSITORY/issues/${{ env.PR_NUMBER }}/labels" \
#            -d "{\"labels\":[\"$PASS_LABEL\"]}"
